// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems;

import edu.wpi.first.wpilibj.Joystick;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMSparkMax;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMSparkMax leftMotor1;
private PWMSparkMax leftMotor2;
private SpeedControllerGroup leftMotors;
private PWMSparkMax rightMotor1;
private PWMSparkMax rightMotor2;
private SpeedControllerGroup rightMotors;
private DifferentialDrive differentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftMotor1 = new PWMSparkMax(0);
addChild("leftMotor1",leftMotor1);
leftMotor1.setInverted(false);
        
leftMotor2 = new PWMSparkMax(1);
addChild("leftMotor2",leftMotor2);
leftMotor2.setInverted(false);
        
leftMotors = new SpeedControllerGroup(leftMotor1, leftMotor2  );
addChild("leftMotors",leftMotors);

        
rightMotor1 = new PWMSparkMax(2);
addChild("rightMotor1",rightMotor1);
rightMotor1.setInverted(false);
        
rightMotor2 = new PWMSparkMax(3);
addChild("rightMotor2",rightMotor2);
rightMotor2.setInverted(false);
        
rightMotors = new SpeedControllerGroup(rightMotor1, rightMotor2  );
addChild("rightMotors",rightMotors);

        
differentialDrive = new DifferentialDrive(leftMotors, rightMotors);
addChild("DifferentialDrive",differentialDrive);
differentialDrive.setSafetyEnabled(true);
differentialDrive.setExpiration(0.1);
differentialDrive.setMaxOutput(1.0);

        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new DriveWithJoysticks());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    public void takeJoystickInputs(Joystick left, Joystick right) {
        differentialDrive.tankDrive(left.getY(), right.getY());
     }
  
     public void stop() {
        differentialDrive.tankDrive(0, 0);
     }

    @Override
    public void periodic() {
        // Put code here to be run every loop
        
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

